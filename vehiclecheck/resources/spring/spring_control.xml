<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	
	<!-- 加载配置属性文件 -->
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath*:config/config.properties" />
	<!-- 扫描加载控制层类 -->
	<context:component-scan base-package="com.yxcoach.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>	

	<!-- 配置spring mvc -->
	 <bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.yxcoach.common.base.convert.SpringDateConverter" />
				<bean class="com.yxcoach.common.base.convert.SpringTimestampConverter" />
			</list>
		</property>
	</bean> 
	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager">
		<!-- message-converters子节点不存在或它的属性register-defaults为true的话，加入其他的转换器 -->
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为true -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true" />
				<property name="objectMapper">
					<bean class="com.yxcoach.common.base.util.JsonMapperCache"></bean>
				</property>
			</bean>
		</mvc:message-converters>
		 <mvc:argument-resolvers>
			<bean class="com.yxcoach.common.base.util.FormModelMethodArgumentResolver"></bean>
		</mvc:argument-resolvers> 
	</mvc:annotation-driven>
	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="ignoreAcceptHeader" value="true" />
		<property name="favorPathExtension" value="true" />
	</bean>

	<!-- 上传文件拦截，设置最大上传文件大小 100M=100*1024*1024(B)=104857600 bytes -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="${web.maxUploadSize}" />
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxInMemorySize" value="4096" />
	</bean>
	
	<!-- 拦截器 -->  
   <mvc:interceptors>  
       <mvc:interceptor>  
       <!-- 对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/ --> 
           <mvc:mapping path="/m/**" />  
           <ref bean="userAccessInterceptor" />  
       </mvc:interceptor>  
        <mvc:interceptor>  
           <mvc:mapping path="/c/**" />  
           <ref bean="appUserAccessApiInterceptor" />  
       </mvc:interceptor>  
       
      <!--  <mvc:interceptor>  
           对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/*  
           <mvc:mapping path="/d/**" />  
           <ref bean="bsDriverAccessApiInterceptor" />  
       </mvc:interceptor> 
       
       <mvc:interceptor>  
           对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/*  
           <mvc:mapping path="/c/**" />  
           <ref bean="comprehensiveAccessApiInterceptor" />  
       </mvc:interceptor>   -->
       
   </mvc:interceptors>  
  
   <bean id="userAccessInterceptor"  
       class="com.yxcoach.common.base.interceptor.UserAccessApiInterceptor">  
   </bean>  
  
   <bean id="appUserAccessApiInterceptor"  
       class="com.yxcoach.common.base.interceptor.AppUserAccessApiInterceptor">  
   </bean> 
   
    
  


</beans>